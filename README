Sympatic - The boilerplate and documentation for the Sympa project Coding Style

is meant to be well documented, easy to deploy and use for every perl programmer.

# todo

* even cpanm -t installs Test::Kwalitee. is there a way to remove that
* grep -RF TODO: lib t # and happy hacking

# open questions

## Makefile.PL

    * Module::install used by PEP
    * both Moo and Dancer2 uses ExtUtils::MakeMaker
    * i pick one without knowledge about the differences 

any idea on it ?

## To Moo or not to Moo

there are a lot of cases where not using Moo is not only easier
but probably should provide faster execution.

    $$self{owner} //= 'jdoe';

instead of

    defined $self->owner
        or $self->owner('jdoe');

on the other hand, Moo code is more robust as

    $$self{onwer} //= 'jdoe';

will not complain and break later where

    defined $self->onwer
        or $self->owner('jdoe');

will die immediatly.

## To Moo qw() or to Moo =>

while declaring the attributes, i get the habit to
always declare 'required' and 'is' in a qw()

    has qw( owner is rw required 1 )
    , isa => Str;

instead of the more classic

    has owner  =>
    , is       => 'rw'
    , required => 1
    , isa      => Str;

David complained on it as it scares the newbies.
I'm not sure about it. Any thought to share ?

# use autodie by default ?

autodie dies everytime something's wrong with `$!`.
i would like to use it as default because:

* developers often forget to test, autodie don't
* autodie probably does the job the way you would do.
* less infrastructure code gets more readable code
* you can avoid it when you want to die your way

    { no autodie;
        open my $fh,'>','/etc/sympa.conf'
            or die $SYMPA::EightBall; }


